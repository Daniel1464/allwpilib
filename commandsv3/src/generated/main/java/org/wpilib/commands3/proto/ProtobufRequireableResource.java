// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.
// Code generated by protocol buffer compiler. Do not edit!
package org.wpilib.commands3.proto;

import java.io.IOException;
import us.hebi.quickbuf.Descriptors;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.Utf8String;

/**
 * Protobuf type {@code ProtobufRequireableResource}
 */
@SuppressWarnings("hiding")
public final class ProtobufRequireableResource extends ProtoMessage<ProtobufRequireableResource> implements Cloneable {
  private static final long serialVersionUID = 0L;

  /**
   * <code>optional string name = 1;</code>
   */
  private final Utf8String name = Utf8String.newEmptyInstance();

  private ProtobufRequireableResource() {
  }

  /**
   * @return a new empty instance of {@code ProtobufRequireableResource}
   */
  public static ProtobufRequireableResource newInstance() {
    return new ProtobufRequireableResource();
  }

  /**
   * <code>optional string name = 1;</code>
   * @return whether the name field is set
   */
  public boolean hasName() {
    return (bitField0_ & 0x00000001) != 0;
  }

  /**
   * <code>optional string name = 1;</code>
   * @return this
   */
  public ProtobufRequireableResource clearName() {
    bitField0_ &= ~0x00000001;
    name.clear();
    return this;
  }

  /**
   * <code>optional string name = 1;</code>
   * @return the name
   */
  public String getName() {
    return name.getString();
  }

  /**
   * <code>optional string name = 1;</code>
   * @return internal {@code Utf8String} representation of name for reading
   */
  public Utf8String getNameBytes() {
    return this.name;
  }

  /**
   * <code>optional string name = 1;</code>
   * @return internal {@code Utf8String} representation of name for modifications
   */
  public Utf8String getMutableNameBytes() {
    bitField0_ |= 0x00000001;
    return this.name;
  }

  /**
   * <code>optional string name = 1;</code>
   * @param value the name to set
   * @return this
   */
  public ProtobufRequireableResource setName(final CharSequence value) {
    bitField0_ |= 0x00000001;
    name.copyFrom(value);
    return this;
  }

  /**
   * <code>optional string name = 1;</code>
   * @param value the name to set
   * @return this
   */
  public ProtobufRequireableResource setName(final Utf8String value) {
    bitField0_ |= 0x00000001;
    name.copyFrom(value);
    return this;
  }

  @Override
  public ProtobufRequireableResource copyFrom(final ProtobufRequireableResource other) {
    cachedSize = other.cachedSize;
    if ((bitField0_ | other.bitField0_) != 0) {
      bitField0_ = other.bitField0_;
      name.copyFrom(other.name);
    }
    return this;
  }

  @Override
  public ProtobufRequireableResource mergeFrom(final ProtobufRequireableResource other) {
    if (other.isEmpty()) {
      return this;
    }
    cachedSize = -1;
    if (other.hasName()) {
      getMutableNameBytes().copyFrom(other.name);
    }
    return this;
  }

  @Override
  public ProtobufRequireableResource clear() {
    if (isEmpty()) {
      return this;
    }
    cachedSize = -1;
    bitField0_ = 0;
    name.clear();
    return this;
  }

  @Override
  public ProtobufRequireableResource clearQuick() {
    if (isEmpty()) {
      return this;
    }
    cachedSize = -1;
    bitField0_ = 0;
    name.clear();
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (!(o instanceof ProtobufRequireableResource)) {
      return false;
    }
    ProtobufRequireableResource other = (ProtobufRequireableResource) o;
    return bitField0_ == other.bitField0_
      && (!hasName() || name.equals(other.name));
  }

  @Override
  public void writeTo(final ProtoSink output) throws IOException {
    if ((bitField0_ & 0x00000001) != 0) {
      output.writeRawByte((byte) 10);
      output.writeStringNoTag(name);
    }
  }

  @Override
  protected int computeSerializedSize() {
    int size = 0;
    if ((bitField0_ & 0x00000001) != 0) {
      size += 1 + ProtoSink.computeStringSizeNoTag(name);
    }
    return size;
  }

  @Override
  @SuppressWarnings("fallthrough")
  public ProtobufRequireableResource mergeFrom(final ProtoSource input) throws IOException {
    // Enabled Fall-Through Optimization (QuickBuffers)
    int tag = input.readTag();
    while (true) {
      switch (tag) {
        case 10: {
          // name
          input.readString(name);
          bitField0_ |= 0x00000001;
          tag = input.readTag();
          if (tag != 0) {
            break;
          }
        }
        case 0: {
          return this;
        }
        default: {
          if (!input.skipField(tag)) {
            return this;
          }
          tag = input.readTag();
          break;
        }
      }
    }
  }

  @Override
  public void writeTo(final JsonSink output) throws IOException {
    output.beginObject();
    if ((bitField0_ & 0x00000001) != 0) {
      output.writeString(FieldNames.name, name);
    }
    output.endObject();
  }

  @Override
  public ProtobufRequireableResource mergeFrom(final JsonSource input) throws IOException {
    if (!input.beginObject()) {
      return this;
    }
    while (!input.isAtEnd()) {
      switch (input.readFieldHash()) {
        case 3373707: {
          if (input.isAtField(FieldNames.name)) {
            if (!input.trySkipNullValue()) {
              input.readString(name);
              bitField0_ |= 0x00000001;
            }
          } else {
            input.skipUnknownField();
          }
          break;
        }
        default: {
          input.skipUnknownField();
          break;
        }
      }
    }
    input.endObject();
    return this;
  }

  @Override
  public ProtobufRequireableResource clone() {
    return new ProtobufRequireableResource().copyFrom(this);
  }

  @Override
  public boolean isEmpty() {
    return ((bitField0_) == 0);
  }

  public static ProtobufRequireableResource parseFrom(final byte[] data) throws
      InvalidProtocolBufferException {
    return ProtoMessage.mergeFrom(new ProtobufRequireableResource(), data).checkInitialized();
  }

  public static ProtobufRequireableResource parseFrom(final ProtoSource input) throws IOException {
    return ProtoMessage.mergeFrom(new ProtobufRequireableResource(), input).checkInitialized();
  }

  public static ProtobufRequireableResource parseFrom(final JsonSource input) throws IOException {
    return ProtoMessage.mergeFrom(new ProtobufRequireableResource(), input).checkInitialized();
  }

  /**
   * @return factory for creating ProtobufRequireableResource messages
   */
  public static MessageFactory<ProtobufRequireableResource> getFactory() {
    return ProtobufRequireableResourceFactory.INSTANCE;
  }

  /**
   * @return this type's descriptor.
   */
  public static Descriptors.Descriptor getDescriptor() {
    return Scheduler.wpi_proto_ProtobufRequireableResource_descriptor;
  }

  private enum ProtobufRequireableResourceFactory implements MessageFactory<ProtobufRequireableResource> {
    INSTANCE;

    @Override
    public ProtobufRequireableResource create() {
      return ProtobufRequireableResource.newInstance();
    }
  }

  /**
   * Contains name constants used for serializing JSON
   */
  static class FieldNames {
    static final FieldName name = FieldName.forField("name");
  }
}
