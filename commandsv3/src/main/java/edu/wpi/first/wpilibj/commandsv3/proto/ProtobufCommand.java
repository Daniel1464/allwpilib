// Code generated by protocol buffer compiler. Do not edit!
package edu.wpi.first.wpilibj.commandsv3.proto;

import java.io.IOException;
import us.hebi.quickbuf.Descriptors;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedMessage;
import us.hebi.quickbuf.Utf8String;

/** Protobuf type {@code ProtobufCommand} */
@SuppressWarnings("hiding")
public final class ProtobufCommand extends ProtoMessage<ProtobufCommand> implements Cloneable {
  private static final long serialVersionUID = 0L;

  /** <code>optional int32 priority = 4;</code> */
  private int priority;

  /** <code>optional uint32 id = 1;</code> */
  private int id;

  /** <code>optional uint32 parent_id = 2;</code> */
  private int parentId;

  /** <code>optional string name = 3;</code> */
  private final Utf8String name = Utf8String.newEmptyInstance();

  /** <code>repeated .wpi.proto.ProtobufRequireableResource requirements = 5;</code> */
  private final RepeatedMessage<ProtobufRequireableResource> requirements =
      RepeatedMessage.newEmptyInstance(ProtobufRequireableResource.getFactory());

  private ProtobufCommand() {}

  /**
   * @return a new empty instance of {@code ProtobufCommand}
   */
  public static ProtobufCommand newInstance() {
    return new ProtobufCommand();
  }

  /**
   * <code>optional int32 priority = 4;</code>
   *
   * @return whether the priority field is set
   */
  public boolean hasPriority() {
    return (bitField0_ & 0x00000001) != 0;
  }

  /**
   * <code>optional int32 priority = 4;</code>
   *
   * @return this
   */
  public ProtobufCommand clearPriority() {
    bitField0_ &= ~0x00000001;
    priority = 0;
    return this;
  }

  /**
   * <code>optional int32 priority = 4;</code>
   *
   * @return the priority
   */
  public int getPriority() {
    return priority;
  }

  /**
   * <code>optional int32 priority = 4;</code>
   *
   * @param value the priority to set
   * @return this
   */
  public ProtobufCommand setPriority(final int value) {
    bitField0_ |= 0x00000001;
    priority = value;
    return this;
  }

  /**
   * <code>optional uint32 id = 1;</code>
   *
   * @return whether the id field is set
   */
  public boolean hasId() {
    return (bitField0_ & 0x00000002) != 0;
  }

  /**
   * <code>optional uint32 id = 1;</code>
   *
   * @return this
   */
  public ProtobufCommand clearId() {
    bitField0_ &= ~0x00000002;
    id = 0;
    return this;
  }

  /**
   * <code>optional uint32 id = 1;</code>
   *
   * @return the id
   */
  public int getId() {
    return id;
  }

  /**
   * <code>optional uint32 id = 1;</code>
   *
   * @param value the id to set
   * @return this
   */
  public ProtobufCommand setId(final int value) {
    bitField0_ |= 0x00000002;
    id = value;
    return this;
  }

  /**
   * <code>optional uint32 parent_id = 2;</code>
   *
   * @return whether the parentId field is set
   */
  public boolean hasParentId() {
    return (bitField0_ & 0x00000004) != 0;
  }

  /**
   * <code>optional uint32 parent_id = 2;</code>
   *
   * @return this
   */
  public ProtobufCommand clearParentId() {
    bitField0_ &= ~0x00000004;
    parentId = 0;
    return this;
  }

  /**
   * <code>optional uint32 parent_id = 2;</code>
   *
   * @return the parentId
   */
  public int getParentId() {
    return parentId;
  }

  /**
   * <code>optional uint32 parent_id = 2;</code>
   *
   * @param value the parentId to set
   * @return this
   */
  public ProtobufCommand setParentId(final int value) {
    bitField0_ |= 0x00000004;
    parentId = value;
    return this;
  }

  /**
   * <code>optional string name = 3;</code>
   *
   * @return whether the name field is set
   */
  public boolean hasName() {
    return (bitField0_ & 0x00000008) != 0;
  }

  /**
   * <code>optional string name = 3;</code>
   *
   * @return this
   */
  public ProtobufCommand clearName() {
    bitField0_ &= ~0x00000008;
    name.clear();
    return this;
  }

  /**
   * <code>optional string name = 3;</code>
   *
   * @return the name
   */
  public String getName() {
    return name.getString();
  }

  /**
   * <code>optional string name = 3;</code>
   *
   * @return internal {@code Utf8String} representation of name for reading
   */
  public Utf8String getNameBytes() {
    return this.name;
  }

  /**
   * <code>optional string name = 3;</code>
   *
   * @return internal {@code Utf8String} representation of name for modifications
   */
  public Utf8String getMutableNameBytes() {
    bitField0_ |= 0x00000008;
    return this.name;
  }

  /**
   * <code>optional string name = 3;</code>
   *
   * @param value the name to set
   * @return this
   */
  public ProtobufCommand setName(final CharSequence value) {
    bitField0_ |= 0x00000008;
    name.copyFrom(value);
    return this;
  }

  /**
   * <code>optional string name = 3;</code>
   *
   * @param value the name to set
   * @return this
   */
  public ProtobufCommand setName(final Utf8String value) {
    bitField0_ |= 0x00000008;
    name.copyFrom(value);
    return this;
  }

  /**
   * <code>repeated .wpi.proto.ProtobufRequireableResource requirements = 5;</code>
   *
   * @return whether the requirements field is set
   */
  public boolean hasRequirements() {
    return (bitField0_ & 0x00000010) != 0;
  }

  /**
   * <code>repeated .wpi.proto.ProtobufRequireableResource requirements = 5;</code>
   *
   * @return this
   */
  public ProtobufCommand clearRequirements() {
    bitField0_ &= ~0x00000010;
    requirements.clear();
    return this;
  }

  /**
   * <code>repeated .wpi.proto.ProtobufRequireableResource requirements = 5;</code> This method
   * returns the internal storage object without modifying any has state. The returned object should
   * not be modified and be treated as read-only.
   *
   * <p>Use {@link #getMutableRequirements()} if you want to modify it.
   *
   * @return internal storage object for reading
   */
  public RepeatedMessage<ProtobufRequireableResource> getRequirements() {
    return requirements;
  }

  /**
   * <code>repeated .wpi.proto.ProtobufRequireableResource requirements = 5;</code> This method
   * returns the internal storage object and sets the corresponding has state. The returned object
   * will become part of this message and its contents may be modified as long as the has state is
   * not cleared.
   *
   * @return internal storage object for modifications
   */
  public RepeatedMessage<ProtobufRequireableResource> getMutableRequirements() {
    bitField0_ |= 0x00000010;
    return requirements;
  }

  /**
   * <code>repeated .wpi.proto.ProtobufRequireableResource requirements = 5;</code>
   *
   * @param value the requirements to add
   * @return this
   */
  public ProtobufCommand addRequirements(final ProtobufRequireableResource value) {
    bitField0_ |= 0x00000010;
    requirements.add(value);
    return this;
  }

  /**
   * <code>repeated .wpi.proto.ProtobufRequireableResource requirements = 5;</code>
   *
   * @param values the requirements to add
   * @return this
   */
  public ProtobufCommand addAllRequirements(final ProtobufRequireableResource... values) {
    bitField0_ |= 0x00000010;
    requirements.addAll(values);
    return this;
  }

  @Override
  public ProtobufCommand copyFrom(final ProtobufCommand other) {
    cachedSize = other.cachedSize;
    if ((bitField0_ | other.bitField0_) != 0) {
      bitField0_ = other.bitField0_;
      priority = other.priority;
      id = other.id;
      parentId = other.parentId;
      name.copyFrom(other.name);
      requirements.copyFrom(other.requirements);
    }
    return this;
  }

  @Override
  public ProtobufCommand mergeFrom(final ProtobufCommand other) {
    if (other.isEmpty()) {
      return this;
    }
    cachedSize = -1;
    if (other.hasPriority()) {
      setPriority(other.priority);
    }
    if (other.hasId()) {
      setId(other.id);
    }
    if (other.hasParentId()) {
      setParentId(other.parentId);
    }
    if (other.hasName()) {
      getMutableNameBytes().copyFrom(other.name);
    }
    if (other.hasRequirements()) {
      getMutableRequirements().addAll(other.requirements);
    }
    return this;
  }

  @Override
  public ProtobufCommand clear() {
    if (isEmpty()) {
      return this;
    }
    cachedSize = -1;
    bitField0_ = 0;
    priority = 0;
    id = 0;
    parentId = 0;
    name.clear();
    requirements.clear();
    return this;
  }

  @Override
  public ProtobufCommand clearQuick() {
    if (isEmpty()) {
      return this;
    }
    cachedSize = -1;
    bitField0_ = 0;
    name.clear();
    requirements.clearQuick();
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (!(o instanceof ProtobufCommand)) {
      return false;
    }
    ProtobufCommand other = (ProtobufCommand) o;
    return bitField0_ == other.bitField0_
        && (!hasPriority() || priority == other.priority)
        && (!hasId() || id == other.id)
        && (!hasParentId() || parentId == other.parentId)
        && (!hasName() || name.equals(other.name))
        && (!hasRequirements() || requirements.equals(other.requirements));
  }

  @Override
  public void writeTo(final ProtoSink output) throws IOException {
    if ((bitField0_ & 0x00000001) != 0) {
      output.writeRawByte((byte) 32);
      output.writeInt32NoTag(priority);
    }
    if ((bitField0_ & 0x00000002) != 0) {
      output.writeRawByte((byte) 8);
      output.writeUInt32NoTag(id);
    }
    if ((bitField0_ & 0x00000004) != 0) {
      output.writeRawByte((byte) 16);
      output.writeUInt32NoTag(parentId);
    }
    if ((bitField0_ & 0x00000008) != 0) {
      output.writeRawByte((byte) 26);
      output.writeStringNoTag(name);
    }
    if ((bitField0_ & 0x00000010) != 0) {
      for (int i = 0; i < requirements.length(); i++) {
        output.writeRawByte((byte) 42);
        output.writeMessageNoTag(requirements.get(i));
      }
    }
  }

  @Override
  protected int computeSerializedSize() {
    int size = 0;
    if ((bitField0_ & 0x00000001) != 0) {
      size += 1 + ProtoSink.computeInt32SizeNoTag(priority);
    }
    if ((bitField0_ & 0x00000002) != 0) {
      size += 1 + ProtoSink.computeUInt32SizeNoTag(id);
    }
    if ((bitField0_ & 0x00000004) != 0) {
      size += 1 + ProtoSink.computeUInt32SizeNoTag(parentId);
    }
    if ((bitField0_ & 0x00000008) != 0) {
      size += 1 + ProtoSink.computeStringSizeNoTag(name);
    }
    if ((bitField0_ & 0x00000010) != 0) {
      size += (1 * requirements.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(requirements);
    }
    return size;
  }

  @Override
  @SuppressWarnings("fallthrough")
  public ProtobufCommand mergeFrom(final ProtoSource input) throws IOException {
    // Enabled Fall-Through Optimization (QuickBuffers)
    int tag = input.readTag();
    while (true) {
      switch (tag) {
        case 32:
          {
            // priority
            priority = input.readInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 8) {
              break;
            }
          }
        case 8:
          {
            // id
            id = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 16) {
              break;
            }
          }
        case 16:
          {
            // parentId
            parentId = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 26) {
              break;
            }
          }
        case 26:
          {
            // name
            input.readString(name);
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 42) {
              break;
            }
          }
        case 42:
          {
            // requirements
            tag = input.readRepeatedMessage(requirements, tag);
            bitField0_ |= 0x00000010;
            if (tag != 0) {
              break;
            }
          }
        case 0:
          {
            return this;
          }
        default:
          {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
      }
    }
  }

  @Override
  public void writeTo(final JsonSink output) throws IOException {
    output.beginObject();
    if ((bitField0_ & 0x00000001) != 0) {
      output.writeInt32(FieldNames.priority, priority);
    }
    if ((bitField0_ & 0x00000002) != 0) {
      output.writeUInt32(FieldNames.id, id);
    }
    if ((bitField0_ & 0x00000004) != 0) {
      output.writeUInt32(FieldNames.parentId, parentId);
    }
    if ((bitField0_ & 0x00000008) != 0) {
      output.writeString(FieldNames.name, name);
    }
    if ((bitField0_ & 0x00000010) != 0) {
      output.writeRepeatedMessage(FieldNames.requirements, requirements);
    }
    output.endObject();
  }

  @Override
  public ProtobufCommand mergeFrom(final JsonSource input) throws IOException {
    if (!input.beginObject()) {
      return this;
    }
    while (!input.isAtEnd()) {
      switch (input.readFieldHash()) {
        case -1165461084:
          {
            if (input.isAtField(FieldNames.priority)) {
              if (!input.trySkipNullValue()) {
                priority = input.readInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
        case 3355:
          {
            if (input.isAtField(FieldNames.id)) {
              if (!input.trySkipNullValue()) {
                id = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
        case 1175162725:
        case 2070327504:
          {
            if (input.isAtField(FieldNames.parentId)) {
              if (!input.trySkipNullValue()) {
                parentId = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
        case 3373707:
          {
            if (input.isAtField(FieldNames.name)) {
              if (!input.trySkipNullValue()) {
                input.readString(name);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
        case -1619874672:
          {
            if (input.isAtField(FieldNames.requirements)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(requirements);
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
        default:
          {
            input.skipUnknownField();
            break;
          }
      }
    }
    input.endObject();
    return this;
  }

  @Override
  public ProtobufCommand clone() {
    return new ProtobufCommand().copyFrom(this);
  }

  @Override
  public boolean isEmpty() {
    return ((bitField0_) == 0);
  }

  public static ProtobufCommand parseFrom(final byte[] data) throws InvalidProtocolBufferException {
    return ProtoMessage.mergeFrom(new ProtobufCommand(), data).checkInitialized();
  }

  public static ProtobufCommand parseFrom(final ProtoSource input) throws IOException {
    return ProtoMessage.mergeFrom(new ProtobufCommand(), input).checkInitialized();
  }

  public static ProtobufCommand parseFrom(final JsonSource input) throws IOException {
    return ProtoMessage.mergeFrom(new ProtobufCommand(), input).checkInitialized();
  }

  /**
   * @return factory for creating ProtobufCommand messages
   */
  public static MessageFactory<ProtobufCommand> getFactory() {
    return ProtobufCommandFactory.INSTANCE;
  }

  /**
   * @return this type's descriptor.
   */
  public static Descriptors.Descriptor getDescriptor() {
    return Scheduler.wpi_proto_ProtobufCommand_descriptor;
  }

  private enum ProtobufCommandFactory implements MessageFactory<ProtobufCommand> {
    INSTANCE;

    @Override
    public ProtobufCommand create() {
      return ProtobufCommand.newInstance();
    }
  }

  /** Contains name constants used for serializing JSON */
  static class FieldNames {
    static final FieldName priority = FieldName.forField("priority");

    static final FieldName id = FieldName.forField("id");

    static final FieldName parentId = FieldName.forField("parentId", "parent_id");

    static final FieldName name = FieldName.forField("name");

    static final FieldName requirements = FieldName.forField("requirements");
  }
}
